{"is_source_file": true, "format": "TypeScript", "description": "This file defines a local storage-based repository for managing 'Note' objects, including functions for creating, reading, updating, and deleting notes, with in-memory caching and multi-tab synchronization.", "external_files": ["localStorage"], "external_methods": ["localStorage.getItem", "localStorage.setItem", "JSON.parse", "JSON.stringify", "dispatchEvent", "addEventListener", "removeEventListener"], "published": ["fetchNotes", "fetchNote", "createNote", "updateNote", "deleteNote", "onNotesChanged"], "classes": [], "methods": [{"name": "export function fetchNotes(): Note[] { fetchNotes", "description": "Returns all notes sorted by most recent update.", "scope": "", "scopeKind": ""}, {"name": "export function fetchNote(id: string): Note | undefined { fetchNote", "description": "Retrieves a specific note by its ID.", "scope": "", "scopeKind": ""}, {"name": "export function createNote(data: CreateNoteDTO = {}): Note { createNote", "description": "Creates a new note with optional initial data and saves it.", "scope": "", "scopeKind": ""}, {"name": "export function updateNote(id: string, patch: UpdateNoteDTO): Note | undefined { updateNote", "description": "Updates an existing note identified by ID with provided data.", "scope": "", "scopeKind": ""}, {"name": "export function deleteNote(id: string): boolean { deleteNote", "description": "Deletes a note by its ID, returns true if deletion occurred.", "scope": "", "scopeKind": ""}, {"name": "export function onNotesChanged(handler: () => void): () => void { onNotesChanged", "description": "Subscribes to notes change events, providing a way to listen for updates.", "scope": "", "scopeKind": ""}, {"name": "function ensureCache() { ensureCache", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "function nanoid(size = 12) { nanoid", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "function readFromLocal(): Note[] { readFromLocal", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "function setupStorageListener() { setupStorageListener", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "function writeToLocal(notes: Note[]) { writeToLocal", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["localStorage.getItem", "localStorage.setItem", "JSON.parse", "JSON.stringify", "dispatchEvent", "addEventListener", "removeEventListener"], "search-terms": ["local storage notes", "note repository", "multi-tab sync notes", "notes CRUD", "Notes API", "Notes state management"], "state": 2, "file_id": 9, "knowledge_revision": 19, "git_revision": "", "ctags": [{"_type": "tag", "name": "CreateNoteDTO", "path": "/home/kavia/workspace/code-generation/note-keeper-173366-173375/notes_frontend/src/lib/storage.ts", "pattern": "/^type CreateNoteDTO = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "NOTES_KEY", "path": "/home/kavia/workspace/code-generation/note-keeper-173366-173375/notes_frontend/src/lib/storage.ts", "pattern": "/^const NOTES_KEY = 'nk.notes.v1';$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "Note", "path": "/home/kavia/workspace/code-generation/note-keeper-173366-173375/notes_frontend/src/lib/storage.ts", "pattern": "/^export type Note = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "UpdateNoteDTO", "path": "/home/kavia/workspace/code-generation/note-keeper-173366-173375/notes_frontend/src/lib/storage.ts", "pattern": "/^type UpdateNoteDTO = Partial<Omit<Note, 'id'>>;$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "before", "path": "/home/kavia/workspace/code-generation/note-keeper-173366-173375/notes_frontend/src/lib/storage.ts", "pattern": "/^  const before = (cache as Note[]).length;$/", "language": "TypeScript", "kind": "constant", "scope": "deleteNote", "scopeKind": "function"}, {"_type": "tag", "name": "cache", "path": "/home/kavia/workspace/code-generation/note-keeper-173366-173375/notes_frontend/src/lib/storage.ts", "pattern": "/^let cache: Note[] | null = null;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "changed", "path": "/home/kavia/workspace/code-generation/note-keeper-173366-173375/notes_frontend/src/lib/storage.ts", "pattern": "/^  const changed = (cache as Note[]).length !== before;$/", "language": "TypeScript", "kind": "constant", "scope": "deleteNote", "scopeKind": "function"}, {"_type": "tag", "name": "chars", "path": "/home/kavia/workspace/code-generation/note-keeper-173366-173375/notes_frontend/src/lib/storage.ts", "pattern": "/^  const chars = 'abcdefghijklmnopqrstuvwxyz0123456789';$/", "language": "TypeScript", "kind": "constant", "scope": "nanoid", "scopeKind": "function"}, {"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/note-keeper-173366-173375/notes_frontend/src/lib/storage.ts", "pattern": "/^export function createNote(data: CreateNoteDTO = {}): Note {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/note-keeper-173366-173375/notes_frontend/src/lib/storage.ts", "pattern": "/^export function deleteNote(id: string): boolean {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "ensureCache", "path": "/home/kavia/workspace/code-generation/note-keeper-173366-173375/notes_frontend/src/lib/storage.ts", "pattern": "/^function ensureCache() {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "fetchNote", "path": "/home/kavia/workspace/code-generation/note-keeper-173366-173375/notes_frontend/src/lib/storage.ts", "pattern": "/^export function fetchNote(id: string): Note | undefined {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "fetchNotes", "path": "/home/kavia/workspace/code-generation/note-keeper-173366-173375/notes_frontend/src/lib/storage.ts", "pattern": "/^export function fetchNotes(): Note[] {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "fn", "path": "/home/kavia/workspace/code-generation/note-keeper-173366-173375/notes_frontend/src/lib/storage.ts", "pattern": "/^  const fn = () => handler();$/", "language": "TypeScript", "kind": "constant", "scope": "onNotesChanged", "scopeKind": "function"}, {"_type": "tag", "name": "nanoid", "path": "/home/kavia/workspace/code-generation/note-keeper-173366-173375/notes_frontend/src/lib/storage.ts", "pattern": "/^function nanoid(size = 12) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "note", "path": "/home/kavia/workspace/code-generation/note-keeper-173366-173375/notes_frontend/src/lib/storage.ts", "pattern": "/^  const note: Note = {$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/note-keeper-173366-173375/notes_frontend/src/lib/storage.ts", "pattern": "/^  const now = Date.now();$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "onNotesChanged", "path": "/home/kavia/workspace/code-generation/note-keeper-173366-173375/notes_frontend/src/lib/storage.ts", "pattern": "/^export function onNotesChanged(handler: () => void): () => void {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "parsed", "path": "/home/kavia/workspace/code-generation/note-keeper-173366-173375/notes_frontend/src/lib/storage.ts", "pattern": "/^    const parsed = JSON.parse(raw) as Note[];$/", "language": "TypeScript", "kind": "constant", "scope": "readFromLocal", "scopeKind": "function"}, {"_type": "tag", "name": "raw", "path": "/home/kavia/workspace/code-generation/note-keeper-173366-173375/notes_frontend/src/lib/storage.ts", "pattern": "/^    const raw = localStorage.getItem(NOTES_KEY);$/", "language": "TypeScript", "kind": "constant", "scope": "readFromLocal", "scopeKind": "function"}, {"_type": "tag", "name": "readFromLocal", "path": "/home/kavia/workspace/code-generation/note-keeper-173366-173375/notes_frontend/src/lib/storage.ts", "pattern": "/^function readFromLocal(): Note[] {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "setupStorageListener", "path": "/home/kavia/workspace/code-generation/note-keeper-173366-173375/notes_frontend/src/lib/storage.ts", "pattern": "/^function setupStorageListener() {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/note-keeper-173366-173375/notes_frontend/src/lib/storage.ts", "pattern": "/^export function updateNote(id: string, patch: UpdateNoteDTO): Note | undefined {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "welcome", "path": "/home/kavia/workspace/code-generation/note-keeper-173366-173375/notes_frontend/src/lib/storage.ts", "pattern": "/^    const welcome: Note = {$/", "language": "TypeScript", "kind": "constant", "scope": "ensureCache", "scopeKind": "function"}, {"_type": "tag", "name": "writeToLocal", "path": "/home/kavia/workspace/code-generation/note-keeper-173366-173375/notes_frontend/src/lib/storage.ts", "pattern": "/^function writeToLocal(notes: Note[]) {$/", "language": "TypeScript", "kind": "function"}], "hash": "98ef6c9879fd0d1c6898618a1ff9f6c9", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/lib/storage.ts", "fields": [{"name": "let cache: Note[] | null = null;", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"19": ""}]}